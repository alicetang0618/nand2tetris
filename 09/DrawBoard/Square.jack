/**
 * Implements a graphic square. A graphic square has a screen location
 * and a size. It also has methods for drawing, erasing, moving on the 
 * screen, and changing its size.
 */
class Square {

    // Location on the screen
    field int x, y;

    // The size of the square
    field int size;

    /** Constructs a new square with a given location and size. */
    constructor Square new(int Ax, int Ay, int Asize) {
        let x = Ax;
        let y = Ay;
        let size = Asize;

        do draw();

        return this;
    }

    /** Deallocates the object's memory. */
    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }

    /** Draws the square on the screen. */
    method void draw() {
        do Screen.setColor(true);
        do Screen.drawRectangle(x, y, x + size, y + size);
        return;
    }

    /** Erases the square from the screen. */
    method void erase() {
        do Screen.setColor(false);
        do Screen.drawRectangle(x, y, x + size, y + size);
        return;
    }

    /** Increments the size by 5 pixels. */
    method void incSize() {
        if ((~((y + size + 5) > 254)) & (~((x + size + 5) > 510))) {
            do erase();
            let size = size + 5;
            do draw();
        }
        return;
    }

    /** Decrements the size by 5 pixels. */
    method void decSize() {
        if (size > 5) {
            do erase();
            let size = size - 5;
            do draw();
        }
        return;
	}

    /** Moves up by 4 pixels. */
    method void moveUp() {
        if (~((y - 4) < 0)) {
            do Screen.setColor(false);
            do Screen.drawRectangle(x, y, x + size, y + size);
            let y = y - 4;
            do Screen.setColor(true);
            do Screen.drawRectangle(x, y, x + size, y + size);
        }
        return;
    }

    /** Moves down by 4 pixels. */
    method void moveDown() {
        if (~((y + 4 + size) > 254)) {
            do Screen.setColor(false);
            do Screen.drawRectangle(x, y, x + size, y + size);
            let y = y + 4;
            do Screen.setColor(true);
            do Screen.drawRectangle(x, y, x + size, y + size);
        }
        return;
    }

    /** Moves left by 4 pixels. */
    method void moveLeft() {
        if (~((x - 4) < 0)) {
            do Screen.setColor(false);
            do Screen.drawRectangle(x, y, x + size, y + size);
            let x = x - 4;
            do Screen.setColor(true);
            do Screen.drawRectangle(x, y, x + size, y + size);
        }
        return;
    }

    /** Moves right by 4 pixels. */
    method void moveRight() {
        if (~((x + 4 + size) > 510)) {
            do Screen.setColor(false);
            do Screen.drawRectangle(x, y, x + size, y + size);
            let x = x + 4;
            do Screen.setColor(true);
            do Screen.drawRectangle(x, y, x + size, y + size);
        }
        return;
    }
}
